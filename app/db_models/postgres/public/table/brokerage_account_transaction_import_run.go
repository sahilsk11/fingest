//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var BrokerageAccountTransactionImportRun = newBrokerageAccountTransactionImportRunTable("public", "brokerage_account_transaction_import_run", "")

type brokerageAccountTransactionImportRunTable struct {
	postgres.Table

	//Columns
	BrokerageAccountImportRunID postgres.ColumnString
	BrokerageAccountID          postgres.ColumnString
	ImportRunID                 postgres.ColumnString
	CreatedAt                   postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type BrokerageAccountTransactionImportRunTable struct {
	brokerageAccountTransactionImportRunTable

	EXCLUDED brokerageAccountTransactionImportRunTable
}

// AS creates new BrokerageAccountTransactionImportRunTable with assigned alias
func (a BrokerageAccountTransactionImportRunTable) AS(alias string) *BrokerageAccountTransactionImportRunTable {
	return newBrokerageAccountTransactionImportRunTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new BrokerageAccountTransactionImportRunTable with assigned schema name
func (a BrokerageAccountTransactionImportRunTable) FromSchema(schemaName string) *BrokerageAccountTransactionImportRunTable {
	return newBrokerageAccountTransactionImportRunTable(schemaName, a.TableName(), a.Alias())
}

func newBrokerageAccountTransactionImportRunTable(schemaName, tableName, alias string) *BrokerageAccountTransactionImportRunTable {
	return &BrokerageAccountTransactionImportRunTable{
		brokerageAccountTransactionImportRunTable: newBrokerageAccountTransactionImportRunTableImpl(schemaName, tableName, alias),
		EXCLUDED: newBrokerageAccountTransactionImportRunTableImpl("", "excluded", ""),
	}
}

func newBrokerageAccountTransactionImportRunTableImpl(schemaName, tableName, alias string) brokerageAccountTransactionImportRunTable {
	var (
		BrokerageAccountImportRunIDColumn = postgres.StringColumn("brokerage_account_import_run_id")
		BrokerageAccountIDColumn          = postgres.StringColumn("brokerage_account_id")
		ImportRunIDColumn                 = postgres.StringColumn("import_run_id")
		CreatedAtColumn                   = postgres.TimestampzColumn("created_at")
		allColumns                        = postgres.ColumnList{BrokerageAccountImportRunIDColumn, BrokerageAccountIDColumn, ImportRunIDColumn, CreatedAtColumn}
		mutableColumns                    = postgres.ColumnList{BrokerageAccountIDColumn, ImportRunIDColumn, CreatedAtColumn}
	)

	return brokerageAccountTransactionImportRunTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		BrokerageAccountImportRunID: BrokerageAccountImportRunIDColumn,
		BrokerageAccountID:          BrokerageAccountIDColumn,
		ImportRunID:                 ImportRunIDColumn,
		CreatedAt:                   CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
